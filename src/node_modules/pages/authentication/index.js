import React, { useState, /*useRef,*/ useEffect } from 'react'
import { Link } from 'react-router-dom'
import axios from 'axios'

const Authentication = () => {
  const [email, setEmail] = useState('')
  const [password, setPassword] = useState('')
  const [isSubmitting,  setIsSubmitting] = useState(false) // Handles disabling submit btn so to only post once
  // const emailRef = useRef(null) // Not best for forms but example to store immutable DOM elements

  const handleSubmit = event => {
    event.preventDefault()

    setIsSubmitting(true)
    console.log('values', email, password)
  }

  useEffect(() => {
    if (!isSubmitting) return

    console.log('effect is triggered!')

    axios('https://conduit.productionready.io/api/users/login', {
      method: 'post',
      body: {
        user: {
          email: {email},
          password: {password}
        }
      }
    }).then(res => {
      console.log('RESPONSE:', res)
      setIsSubmitting(false)
    }).catch(error => {
      console.log('ERROR:', error)
      setIsSubmitting(false)
    })
  })

  // useEffect(() => {
  //   document.title = email
  //   console.log('effect is triggered!')
  // }, [email]) // Email is added as a dependency, aka trigged only when email changes
  // // ^ Consider the [] a dependency list and re-rendering will only trigger on dependency change.
  // // ^ Remove the [] addition entirely and it will always trigger.

  return (
    <div className='auth-page'>
      <div className='container page'>
        <div className='row'>
          <div className='col-md-6 offset-md-3  col-xs-12'>
            <h1 className='text-xs-center'>Sign in</h1>
            <p className='text-xs-center'>
              <Link to='/register'>Need an account?</Link>
            </p>
            <form onSubmit={handleSubmit}>
              <fieldset className='form-group'>
                <input
                  type='email'
                  className='form-control form-control-lg'
                  placeholder='Email'
                  // ref={emailRef}
                  value={email}
                  onChange={ e => setEmail(e.target.value) }
                />
              </fieldset>
              <fieldset className='form-group'>
                <input
                  type='password'
                  className='form-control form-control-lg'
                  placeholder='Password'
                  value={password}
                  onChange={ e => setPassword(e.target.value) }
                />
              </fieldset>
              <button
                disabled={isSubmitting}
                className='btn btn-lg btn-primary pull-xs-right'
                type='submit'
              >
                Sign in
              </button>
            </form>
          </div>
        </div>
      </div>
    </div>
  )
}

export default Authentication